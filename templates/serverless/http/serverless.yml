service: http-demo

# Allows you to run the application on localhost
plugins:
  - serverless-offline

# Load environment variable from ".env"
useDotenv: true

# Custom variables (accessed via ${self:custom.params.VARIABLE_NAME})
custom:
  params:
    VARIABLE_DEMO_1: ${env:VARIABLE_DEMO_1}
    VARIABLE_DEMO_2: ${env:VARIABLE_DEMO_2}

# Which files should or should not be packed in the lambda function
package:
  patterns:
    - '!./**' # Exclude all files
    - './src/**' # Include src
    - './node_modules/**' # Include node_modules
    - '!./node_modules/aws-sdk/**' # Exclude AWS SDK V2 from being packaged (aws-sdk is included natively in lambda)
    - '!./node_modules/@aws-sdk/**' # Exclude AWS SDK V3 from being packaged (@aws-sdk is included natively in lambda)

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment: # Environment variables
    REGION: ${opt:region, 'us-east-1'}
    VARIABLE_DEMO_1: ${self:custom.params.VARIABLE_DEMO_1}
    VARIABLE_DEMO_2: ${self:custom.params.VARIABLE_DEMO_2}

functions:
  main:
    handler: src/handler.handler
    timeout: 7 # Timeout in seconds
    events:
      - http:
          method: GET
          path: '/hello'
          cors: true
